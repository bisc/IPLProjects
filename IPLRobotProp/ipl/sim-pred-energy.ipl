import Robot_Task_Types.*;
import tasks_simple.*;  
   
use view TaskLibrary.fullspeed as lib; 
use model prism_nospeed_noturns(INITIAL_LOCATION, TARGET_LOCATION, INITIAL_BATTERY);
        
set tasks : Task; 
var ints :  {int};                   
  
bfun abs (int) -> int;      
   
// the error is less than 5%. Expected: valid
forall t : tasks | abs(t::energy - t::energy_sim) <= 0.05 * (t::energy + t::energy_sim) / 2 ;

// the error is less than 1%. Expected: invalid
forall t : tasks | abs(t::energy - t::energy_sim) <= 0.01 * (t::energy + t::energy_sim) / 2 ;

// parameterize by length of mission
// prism model of simulator
                 
// forall t : tasks | forall i: ints | i + 1 = i + 2;
	 