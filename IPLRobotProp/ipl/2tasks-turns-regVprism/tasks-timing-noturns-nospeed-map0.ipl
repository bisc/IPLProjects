import Robot_Task_Types.*;
import tasks_view_map0_simple.*;  
   
use view TaskLibrary.fullspeed as lib;  
use model prism_noturns_nocharge_nospeed_map0(INITIAL_LOCATION, TARGET_LOCATION, INITIAL_BATTERY);
       
stvar l: int;               
bfun abs (real) -> real;     
 
set tasks : Task;                   
  
 // an integration property 
forall t1 : tasks | forall t2: tasks |      
	t1::task_type = 1 & t2::task_type = 1 & // forward motion
	t1::end_loc = t2::start_loc & // sequential
	t1::start_loc != t2::end_loc -> // start != finish
	abs (     
		R{"time"}min=?[l=t1::start_loc U (l = t1::end_loc U l=t2::end_loc)]
			{| t1::start_loc, t2::end_loc, 3000 |} - 
		(t1::duration + t2::duration)
	) <= 0.05 * (t1::duration + t2::duration);
                     
  