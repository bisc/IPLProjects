--AADL2
--SAE Aerospace Standard AS5506B
--Appendix A: Predeclared Property Sets

property set Memory_Properties is
	
	Access_Right: Access_Rights => read_write
		applies to (data, bus, data access, bus access);
	
	Access_Rights: type enumeration (read_only, write_only, read_write, by_method);
	
	Access_Time: record (
		First: IO_Time_Spec;
		Last: IO_Time_Spec;)
		=> [First => [Time => Start; Offset => 0 ns .. 0 ns;];
			Last => [Time => Completion; Offset => 0 ns .. 0 ns;];]
		applies to (data access, data);
	
	Allowed_Message_Size: Size_Range
		applies to (bus);
	
	Assign_Time: record (
		Fixed: Time_Range;
		PerByte: Time_Range;)
		applies to (processor);
	
	Base_Address: aadlinteger 0 .. Max_Base_Address
		applies to (memory, data, data access, port);
	
	Device_Register_Address: aadlinteger
		applies to (port, feature group);
	
	Read_Time: record (
		Fixed: Time_Range;
		PerByte: Time_Range;)
		applies to (memory);
	
	Code_Size: Size
		applies to (data, thread, thread group, process, system, subprogram, processor, virtual processor, virtual bus, device);
	
	Data_Size: Size
		applies to (data, feature, subprogram, thread, thread group, process, system, processor, virtual processor, virtual bus, bus, device);
	
	Heap_Size: Size
		applies to (thread, subprogram,thread group, process, system, processor, virtual processor, device);
	
	Stack_Size: Size
		applies to (thread, subprogram, processor, virtual processor, device);
	
	Source_Code_Size: Size
		applies to (data, thread, thread group, process, system, subprogram, processor, virtual processor, device);
	
	Source_Data_Size: Size
		applies to (data, feature, subprogram, thread, thread group, process, system, processor, virtual processor, device);
	
	Source_Heap_Size: Size
		applies to (thread, subprogram);
	
	Source_Stack_Size: Size
		applies to (thread, subprogram, processor, virtual processor, device);
	
	Byte_Count: aadlinteger 0 .. Max_Byte_Count
		applies to (memory); -- Deprecated. use memory_size
	
	Memory_Size: Size
		applies to (memory, system, processor, virtual processor);
	
	Word_Size: Size => 8 bits
		applies to (memory);
	
	Word_Space: aadlinteger 1 .. Max_Word_Space => 1
		applies to (memory);
	
	Write_Time: record (
		Fixed: Time_Range;
		PerByte: Time_Range;)
		applies to (memory);
end Memory_Properties;