use model prism_probs;

// valid
exists x : {1, 2, 3} | // existence  
	P>0.5 [F (x + 1 > 3)]{||};
	
forall x : {1, 2, 3} | // prop abstr  
	x > 2 ->  P>0.5 [F (x + 1 > 3)]{||};  

exists x : {1, 2, 3} | // prop abstr   
	x > 2 & P>0.5 [F (x + 1 > 3)]{||};  
      
exists x : {0, 1, 2} |  // alternation
	forall y : {0, 1, 2} |      
		P>0.5 [F (x + y > 1)]{||};  
		          
exists x : {0, 1} | // reduced flex arg
	forall y : {1, 2} |        
		P>0.5 [F (y + 1 > 1)]{||};     
              
// invalid
forall x : {1, 2, 3} | // not for all
	P>0.5 [F (x + 1 > 3)]{||};
	
forall x : {1, 2, 3} | // prop abstr - not for all
	x > 1  ->  P>0.5 [F (x + 1 > 3)]{||};
	
exists x : {1, 2, 3} | // prop abstr - doesn't exist
	x > 3 & P>0.5 [F (x + 1 > 3)]{||}; 
 
exists x : {0, 1, 2} |  // alternation
	forall y : {0, 1, 2} |     
		P>0.5 [F (x + y > 2)]{||};        
                   
	     


	                        